our triangle is made from vertices. Some of these vertices will overlap. So how do we reference them?
- We use an index to reference each vertex, as it saves us storage and time.

1. Initialize GLfw library
2. Initialize Glad loader to work with glfw
3. Write two shader programs (.vert and .frag)
4. Collect the data and create the three different buffer objects: VBO, VAO, EBO. Learn syntax and explain
5. While loop that handles user interactions, prepare the current window and begin the rendering
6. After rendering swap the buffer. First Buffer stores the current data, then the other one stores the next frame data
7. Once rendering loop ends, we destroy the shader object, terminate the loop, close the window, and return 0.


TO REVIEW:
Study vec4.In's and out's (out vec4 (X));
Review section on declaring in and out, as they will tell you the inputs and outputs from different files.
Study Layout syntax - glVertexAttribPointer(0,3,GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0); -- retrieves location
and puts it in a pointer